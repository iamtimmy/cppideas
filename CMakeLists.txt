# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(cppideas
	DESCRIPTION
		"Implementations for ideas I've had that don't really fit anywhere (yet)"
)

# Target cppfront11
set(CMKR_TARGET cppfront11)
set(cppfront11_SOURCES "")

list(APPEND cppfront11_SOURCES
	"cppfront/new11.hpp"
)

set(CMKR_SOURCES ${cppfront11_SOURCES})
add_library(cppfront11 INTERFACE)

if(cppfront11_SOURCES)
	target_sources(cppfront11 INTERFACE ${cppfront11_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${cppfront11_SOURCES})

target_compile_features(cppfront11 INTERFACE
	cxx_std_11
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

# Target cppfront20
set(CMKR_TARGET cppfront20)
set(cppfront20_SOURCES "")

list(APPEND cppfront20_SOURCES
	"cppfront/new20.hpp"
)

set(CMKR_SOURCES ${cppfront20_SOURCES})
add_library(cppfront20 INTERFACE)

if(cppfront20_SOURCES)
	target_sources(cppfront20 INTERFACE ${cppfront20_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${cppfront20_SOURCES})

target_compile_features(cppfront20 INTERFACE
	cxx_std_20
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

